# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Python app to Azure Web App - edubot

on:
  push:
    branches:
      - main
  workflow_dispatch:
env:
  RPY2_CFFI_MODE: ABI

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python version
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
         
      - name: Install libxml2 and libxslt 
        run: |
          sudo apt-get update
          sudo apt-get install libxml2-dev libxslt1-dev
          sudo apt-get install python-setuptools
          
          
      - name: 'Install R'
        run: |
          sudo apt-get update
          sudo apt-get install -y r-base
          export R_HOME=$(R RHOME)
          echo "R_HOME is set to $R_HOME"
          export PATH=$PATH:/usr/bin/R

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt --use-deprecated=legacy-resolver
      
      - name: Collect static files
        env:
          DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
        run: |
          python manage.py collectstatic --noinput

      # - name: Run migrations
      #   env:
      #     DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
      #   run: |
      #     python manage.py migrate

      # - name: Create ZIP file for deployment
      #   run: |
      #     zip -r django_app.zip . -x "*.git*" "*/__pycache__/*" "*.md" "*.yaml" "*.yml"

     
      # Optional: Add step to run tests here (PyTest, Django test suites, etc.)

      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            release.zip
            !venv/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip
      
      - name: Delay before deployment
        run: sleep 60
      
      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v2
        id: deploy-to-webapp
        with:
          app-name: 'edubot'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_0BF4A83B2A3E40FD85A353013A4F6604 }}
          # publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          # package: django_app.zip
# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Set up Python
#         uses: actions/setup-python@v2
#         with:
#           python-version: '3.12'

#       - name: Install dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install -r requirements.txt

#       - name: Run tests
#         run: |
#           python manage.py test

#       - name: Deploy to Azure
#         uses: azure/webapps-deploy@v3
#         with:
#           app-name: 'edubot'
#           slot-name: 'Production'
#           publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}


# sudo apt-get install r-base
#           source ~/.bashrc
#           export R_HOME=$(R RHOME)
#           export RPY2_CFFI_MODE=ABI
#           pip install rpy2
#           export PATH=$PATH:/usr/local/bin/R
#           export LDFLAGS="-Wl,-rpath,~/lib64/R/lib"
#           pip install wheel